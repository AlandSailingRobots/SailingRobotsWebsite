function Point(id,id_mission,isCheckpoint,rankInMission,name,lat,lon,decl,radius,stay_time,harvested){this.id=id;this.id_mission=id_mission;this.rankInMission=rankInMission;this.isCheckpoint=isCheckpoint;this.name=name;this.latitude=lat;this.longitude=lon;this.declination=decl;this.radius=radius;this.stay_time=stay_time;this.harvested=(harvested===undefined?0:harvested)}Point.prototype.print=function(){if(this.isCheckpoint=="1"){var type="checkpoint"}else{var type="waypoint"}var result="The "+type+" "+this.rankInMission+" - "+this.name+" is located at the coordinates ("+this.latitude+", "+this.longitude+")\nRadius: "+this.radius+" (m) | Declination: "+this.declination+" | Stay time: "+this.stay_time+" (sec)";return result};var mymap=L.map('map');initMap(60.1,19.935,mymap);var popup=L.popup();var listOfPoints=document.getElementById('listOfPoints');var isOpen=false;var numberOfPoints=listOfPoints.childElementCount;var arrayOfPoints={};var arrayOfMarker={};var arrayOfCircle={};var coordGPS;var timeStamp=currentTimeStamp();var polyline;var LatLngs=Array();var arrayOfPolylineSup=Array(),arrayOfPolylineInf=Array();var name;var lat;var lon;var rankInMission;function initMap(lat,lon,mymap){var accessToken='pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';mymap.setView([lat,lon],13);L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token='+accessToken,{maxZoom:18,attribution:'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',id:'mapbox.streets'}).addTo(mymap);mymap.on('click',onMapClick)}function onMapClick(e){coordGPS=splitGPS(e.latlng.toString());if(isOpen){mymap.closePopup();isOpen=false}else{popup.setLatLng(e.latlng).setContent("You clicked the map at "+coordGPS+askNewPoint()).openOn(mymap);isOpen=true}}$('#map').on('click','.addPoint',function(e){if($(this).attr('id')=='newCheckpoint'){var text='checkpoint';var classText='isCheckpoint';var defaultRadius=15;var defaultStay_time=5}else{var text='waypoint';var classText='isWaypoint';var defaultRadius=50;var defaultStay_time=1}editModalToPoint(classText,text);$('#newPointRadius').val(defaultRadius);$('#newPointStay_time').val(defaultStay_time);$('#newPointLatitude').val(coordGPS.split(', ')[0]);$('#newPointLongitude').val(coordGPS.split(', ')[1]);$('#createPointModal').modal('show')});function editModalToPoint(classText,text){var waypointOrCheckpoint=$('.waypointOrCheckpoint');for(var i=waypointOrCheckpoint.length-1;i>=0;i-=1){waypointOrCheckpoint[i].removeChild(waypointOrCheckpoint[i].firstChild);var txt_env=document.createElement('span');txt_env.classList.add(classText);txt_env.appendChild(document.createTextNode(text));waypointOrCheckpoint[i].appendChild(txt_env)}}$('#cancelNewPoint').on('click',function(){$(':input','#createPointModal').val("");$('#createPointModal').modal('hide');mymap.closePopup();isOpen=false});function createNewPoint(){var listOfPoints=document.getElementById('listOfPoints');var color;var name=escapeHtml($('#newPointName').val()),id_mission=$('#missionSelection').children(':selected').attr('id'),radius=escapeHtml($('#newPointRadius').val()),stay_time=parseInt($('#newPointStay_time').val())*60,lat=escapeHtml($('#newPointLatitude').val()),lon=escapeHtml($('#newPointLongitude').val()),declination=escapeHtml($('#newPointDeclination').val()),rankInMission= ++numberOfPoints,isCheckpoint;timeStamp=currentTimeStamp();if($('.waypointOrCheckpoint')[0].firstChild.classList.contains('isCheckpoint')){isCheckpoint=1}else{isCheckpoint=0}var newPoint_JS=new Point(timeStamp,id_mission,isCheckpoint,rankInMission,name,lat,lon,declination,radius,stay_time);createMarker(newPoint_JS,lat,lon);$('#createPointModal').modal('hide');mymap.closePopup();isOpen=false}function updateListItems(marker,editOrMove){var index=marker.options.rankInMission,id=marker.options.id;if(editOrMove=="move"){arrayOfPoints[index].latitude=roundNumber(marker.getLatLng().lat,5);arrayOfPoints[index].longitude=roundNumber(marker.getLatLng().lng,5);arrayOfCircle[index].setLatLng(marker.getLatLng(),{});}var listOfPoints=document.getElementById('listOfPoints');var newPoint=document.createElement('li');newPoint.setAttribute("id",id);newPoint.setAttribute("class","point list-group-item");newPoint.appendChild(document.createTextNode(arrayOfPoints[index].print()));addEditSymbol(newPoint,index);addDeleteSymbol(newPoint);var listItem=document.getElementById(id);listOfPoints.insertBefore(newPoint,listItem);listOfPoints.removeChild(listItem)}function saveMissionIntoDB(){$.ajax({type:'POST',url:'php/insertPointIntoDB.php',contentType:'application/json; charset=utf-8',data:JSON.stringify(arrayOfPoints),async:false,timeout:3000,success:function(data){alert(data)},error:function(){alert('Fail !')}})}function getMissionPointFromDB(id_mission){mymap.remove();mymap=L.map('map');while(listOfPoints.firstChild){listOfPoints.removeChild(listOfPoints.firstChild)}$.ajax({type:'POST',url:'php/getPointList.php',data:{id_mission:id_mission},dataType:'json',async:true,timeout:3000,success:function(data){displayPointFromDB(data)},error:function(){alert('Fail !')}})}function displayPointFromDB(data){arrayOfPoints={};arrayOfMarker={};arrayOfCircle={};var len=data.length;if(len==0){listOfPoints.parentNode.style.display="none";initMap(60.1,19.935,mymap)}for(var i=0;i<len;i+=1){var point=$.extend(new Point(),data[i]);lat=point.latitude;lon=point.longitude;if(i==0){initMap(lat,lon,mymap)}createMarker(point,lat,lon)}numberOfPoints=listOfPoints.childElementCount;mymap.removeLayer(polyline);drawLineBetweenMarkers()}function createMarker(point,lat,lon){var newPoint=document.createElement('li');newPoint.setAttribute("class","point");newPoint.classList.add('list-group-item');newPoint.setAttribute("id",point.id);if(point.isCheckpoint=="1"){newPoint.classList.add('isCheckpoint');color=greenIcon}else{newPoint.classList.add('isWaypoint');color=blueIcon}arrayOfPoints[point.rankInMission]=point;newPoint.appendChild(document.createTextNode(point.print()));addEditSymbol(newPoint,point.rankInMission);addDeleteSymbol(newPoint);listOfPoints.appendChild(newPoint);if(listOfPoints.parentNode.style.display=='none'){listOfPoints.parentNode.style.display="inline-block"}marker=new L.marker([lat,lon],{draggable:'true',icon:color,rankInMission:point.rankInMission,id:point.id});marker.bindPopup(askEditPoint(point));arrayOfMarker[point.rankInMission]=marker;var circle=L.circle([lat,lon],parseFloat(point.radius),{color:'red',fillColor:'#f03',fillOpacity:0.3,rankInMission:point.rankInMission,id:point.id}).addTo(mymap);arrayOfCircle[point.rankInMission]=circle;if(polyline!=undefined){mymap.removeLayer(polyline);}LatLngs.push(marker.getLatLng());polyline=L.polyline(LatLngs,{color:'red'}).addTo(mymap);marker.on('dragend',function(event){var marker=event.target;var position=marker.getLatLng();marker.setLatLng(position,{draggable:'true',rankInMission:marker.options.rankInMission,id:marker.options.id}).update();updateListItems(marker,"move");mymap.removeLayer(polyline);removePolylineInfSup();drawLineBetweenMarkers()});mymap.addLayer(marker)}function drawLineBetweenMarkers(){var size=document.getElementById('listOfPoints').children.length;var coordSupInf;LatLngs=Array();var LatLngsSup=Array();var LatLngsInf=Array();if(size>1){LatLngs.push(arrayOfMarker[1].getLatLng());for(var i=2;i<=size;i+=1){LatLngs.push(arrayOfMarker[i].getLatLng());coordSupInf=computeCoordinatesOfLine(arrayOfMarker[i-1],arrayOfMarker[i]);LatLngsSup[0]=coordSupInf[0];LatLngsSup[1]=coordSupInf[1];polylineSup=L.polyline(LatLngsSup,{fillOpacity:0.3,color:'#afafaf'}).addTo(mymap);arrayOfPolylineSup.push(polylineSup);LatLngsInf[0]=coordSupInf[2];LatLngsInf[1]=coordSupInf[3];polylineInf=L.polyline(LatLngsInf,{fillOpacity:0.3,color:'#afafaf'}).addTo(mymap);arrayOfPolylineInf.push(polylineInf)}}polyline=L.polyline(LatLngs,{color:'red'}).addTo(mymap)}function computeCoordinatesOfLine(markerA,markerB){var theta=computeTheta(markerA.getLatLng(),markerB.getLatLng());var result={};var radiusA=parseInt(arrayOfPoints[markerA.options.rankInMission].radius),radiusB=parseInt(arrayOfPoints[markerB.options.rankInMission].radius);radiusA=parseFloat((radiusA+radiusB)/2);radiusB=radiusA;console.log('theta : ',theta*180/Math.PI,'radiusA',radiusA,'radiusB',radiusB);result[0]=rotationVector(theta+Math.PI/2,markerA.getLatLng()['lat'],markerA.getLatLng()['lng'],radiusA*(1+Math.abs(Math.sin(theta))));result[1]=rotationVector(theta+Math.PI/2,markerB.getLatLng()['lat'],markerB.getLatLng()['lng'],radiusB*(1+Math.abs(Math.sin(theta))));result[2]=rotationVector(theta-Math.PI/2,markerA.getLatLng()['lat'],markerA.getLatLng()['lng'],radiusA*(1+Math.abs(Math.sin(theta))));result[3]=rotationVector(theta-Math.PI/2,markerB.getLatLng()['lat'],markerB.getLatLng()['lng'],radiusB*(1+Math.abs(Math.sin(theta))));return result}function computeTheta(vectorA,vectorB){return Math.atan2(vectorB['lat']-vectorA['lat'],vectorB['lng']-vectorA['lng'])}function rotationVector(theta,vector_lat,vector_lng,radius){var result={};result['lat']=vector_lat+radius*Math.sin(theta)/(110540);result['lng']=vector_lng+radius*Math.cos(theta)/(111320*Math.cos(vector_lng*Math.PI/180));return result}function removePolylineInfSup(){for(var i=arrayOfPolylineSup.length-1;i>=0;i-=1){mymap.removeLayer(arrayOfPolylineSup[i]);mymap.removeLayer(arrayOfPolylineInf[i])}arrayOfPolylineInf=Array();arrayOfPolylineSup=Array()}var editedMarkerIndex;$('#listOfPoints').on('click','.customEdit',function(){var id_marker=$(this).parent().attr('id');editedMarkerIndex=$(this).attr('id').split(':')[1];editMarker(id_marker)});$('#map').on('click','.editPointButton',function(){var id_element=$(this).attr('id');var id_marker=id_element.split('|')[1].split(':')[1];editedMarkerIndex=id_element.split('|')[0].split(':')[1];editMarker(id_marker)});function editMarker(id_marker){if($('#'+id_marker).hasClass('Checkpoint')||$('#'+id_marker).hasClass('isCheckpoint')){var text='checkpoint';var classText='isCheckpoint'}else{var text='waypoint';var classText='isWaypoint'}editModalToPoint(classText,text);var point=arrayOfPoints[editedMarkerIndex];$('#editPointName').val(point.name);$('#editPointLatitude').val(point.latitude);$('#editPointLongitude').val(point.longitude);$('#editPointRadius').val(point.radius);$('#editPointStay_time').val(parseInt(point.stay_time)/60);$('#editPointDeclination').val(point.declination);$('#editPointModal').modal('show')}$('#cancelEditPointButton').on('click',function(){$('#editPointModal').modal('hide')});$('#confirmEditPointButton').on('click',function(){$('#editPointModal').modal('hide');var point=arrayOfPoints[editedMarkerIndex];if(point.name!=escapeHtml($('#editPointName').val())){point.name=escapeHtml($('#editPointName').val())}if(point.latitude!=escapeHtml($('#editPointLatitude').val())){point.latitude=parseFloat(escapeHtml($('#editPointLatitude').val()))}if(point.longitude!=escapeHtml($('#editPointLongitude').val())){point.longitude=parseFloat(escapeHtml($('#editPointLongitude').val()))}if(point.radius!=escapeHtml($('#editPointRadius').val())){point.radius=parseInt(escapeHtml($('#editPointRadius').val()))}if(point.stay_time!=parseInt(escapeHtml($('#editPointStay_time').val()))*60){point.stay_time=parseInt(escapeHtml($('#editPointStay_time').val()))}if(point.declination!=escapeHtml($('#editPointDeclination').val())){point.declination=parseFloat(escapeHtml($('#editPointDeclination').val()))}updateListItems(arrayOfMarker[editedMarkerIndex],"drag");var position=[point.latitude,point.longitude];var marker=arrayOfMarker[editedMarkerIndex];marker.setLatLng(position,{draggable:'true',rankInMission:marker.options.rankInMission,id:marker.options.id}).update()});function addEditSymbol(newNode,rankInMission){var newEdit=document.createElement('span');newEdit.setAttribute("class","label label-default pull-right customEdit");newEdit.setAttribute("id","rankInMission:"+rankInMission);newEdit.appendChild(document.createTextNode('Edit'));newNode.appendChild(newEdit)}$('#listOfPoints').on('click','.customDelete',function(){var id_marker=$(this).parent().attr('id');deleteMarker(id_marker)});$('#map').on('click','.deletePoint',function(){var id_element=$(this).attr('id');var id_marker=id_element.split('|')[1].split(':')[1];deleteMarker(id_marker)});function deleteMarker(id_marker){var parentNodeList=document.getElementById('listOfPoints').children;var newArrayOfPoints={},newArrayOfMarker={},newArrayOfCircle={};var changeRank=0;var j;for(var i=1,len=parentNodeList.length;i<=len;i+=1){j=i;if(changeRank){arrayOfPoints[i].rankInMission=i-1;arrayOfMarker[i].options.rankInMission=i-1;j=i-1}if(arrayOfPoints[i].id==id_marker){changeRank+=1;mymap.removeLayer(arrayOfMarker[i]);mymap.removeLayer(arrayOfCircle[i]);document.getElementById('listOfPoints').removeChild(document.getElementById(id_marker))}else{newArrayOfMarker[j]=arrayOfMarker[i];newArrayOfPoints[j]=arrayOfPoints[i];newArrayOfCircle[j]=arrayOfCircle[i]}}rankInMission-=1;numberOfPoints-=1;arrayOfPoints=newArrayOfPoints;arrayOfMarker=newArrayOfMarker;arrayOfCircle=newArrayOfCircle;mymap.removeLayer(polyline);removePolylineInfSup();drawLineBetweenMarkers();};function addDeleteSymbol(newNode){var newDelete=document.createElement('span');newDelete.setAttribute("class","label label-default pull-right customDelete");newDelete.appendChild(document.createTextNode('Delete'));newNode.appendChild(newDelete)}function setdecl(v){console.log("declination found: "+v);declination=v}function lookupMag(lat,lon){var url="http://www.ngdc.noaa.gov/geomag-web/calculators/calculateIgrfgrid?lat1="+lat+"&lat2="+lat+"&lon1="+lon+"&lon2="+lon+"&latStepSize=0.1&lonStepSize=0.1&magneticComponent=d&resultFormat=xml";var xmlHTTP=new XMLHttpRequest();xmlHTTP.onreadystatechange=function(){if(xmlHTTP.readyState==4&&xmlHTTP.status==200){setdecl($(xml).find('declination').text())}};xmlHTTP.open("GET",url,true);xmlHTTP.send(null)}function deleteAllChildren(parentNode){while(parentNode.firstChild){parentNode.removeChild(parentNode.firstChild)}}function askNewPoint(){return "<br/> Do you want to add a point here ? <br /> \n<div id='buttonContainerMap'> \n<button name='newWaypoint'   class='btn btn-info addPoint'    id='newWaypoint' >Waypoint</button> \n<button name='newCheckpoint' class='btn btn-success addPoint' id='newCheckpoint' >Checkpoint</button> \n</div>"}function askEditPoint(point){if(point.isCheckpoint=="1"){var type="Checkpoint"}else{var type="Waypoint"}return type+": "+point.rankInMission+' - '+point.name+"<br /> \nPosition: "+point.latitude+", "+point.longitude+"<br /> \nRadius: "+point.radius+" (m) | Stay_time: "+point.stay_time+" (sec) <br /> \n<br /> \n<div> \n<button name='deletePointButton' class='btn btn-danger deletePoint'  id='rankInMission:"+point.rankInMission+"|id:"+point.id+"' >Delete Point</button> \n<button name='editPointButton'   class='btn btn-info   editPointButton "+type+"' id='rankInMission:"+point.rankInMission+"|id:"+point.id+"' >Edit Point</button> \n</div>"}function splitGPS(string){var res;res=string.split("(")[1].split(")")[0];return res}function computeDeclination(lat,lon){return 0}function currentTimeStamp(){return Math.floor(Date.now()/1000)}function escapeHtml(text){var map={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#039;'};return text.replace(/[&<>"']/g,function(m){return map[m]})}function roundNumber(number,digits){var multiple=Math.pow(10,digits);var rndedNum=Math.round(number*multiple)/multiple;return rndedNum}
